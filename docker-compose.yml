services:
  blockate-audio-bot:
    build:
      context: .
      target: bot-production
    container_name: blockate-audio-bot
    restart: unless-stopped
    environment:
      # Discord Configuration
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - OWNERS=${OWNERS}
      
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      
      # Notification Service
      - NTFY_AUTH=${NTFY_AUTH}
      - NTFY_USER=${NTFY_USER}
      - NTFY_PASSWORD=${NTFY_PASSWORD}
      
      # Audio Service
      - AUDIO_FILE_PROXY_AUTH=${AUDIO_FILE_PROXY_AUTH}
      - ROBLOX_ACCOUNT_COOKIE=${ROBLOX_ACCOUNT_COOKIE}
      
      # Node Environment
      - NODE_ENV=production
    
    # Mount volumes for persistent data
    volumes:
      - ./bot/data:/app/data:rw
    
    # Expose health check port
    ports:
      - "51033:51033"
    
    # Add logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network for inter-service communication
    networks:
      - blockate-network

  blockate-audio-selfbot:
    build:
      context: .
      target: selfbot-production
    container_name: blockate-audio-selfbot
    restart: unless-stopped
    environment:
      # Discord Selfbot Configuration
      - ACCOUNT_TOKEN=${ACCOUNT_TOKEN}
      - ROBLOX_ACCOUNT_TOKEN=${ROBLOX_ACCOUNT_TOKEN}
      
      # Node Environment
      - NODE_ENV=production
    
    # Mount volumes for persistent data and IPC communication
    volumes:
      # IPC socket for communication with main bot
      - /tmp:/tmp:rw
      # Config file (if you want to override it)
      - ./selfbot/config.json:/app/config.json:ro
    
    # Add logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network for inter-service communication
    networks:
      - blockate-network
    
    # Depend on the main bot service
    depends_on:
      - blockate-audio-bot

  # Optional: Add PostgreSQL database if needed
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: blockate-postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-blockate}
  #     - POSTGRES_USER=${POSTGRES_USER:-postgres}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - blockate-network

networks:
  blockate-network:
    driver: bridge

# volumes:
#   postgres_data: